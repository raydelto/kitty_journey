/***********************************************************
 *            ROBERTO ABREU 1735144                        *
 *                 2008/2009                               */

/**************************************************
 [1]                INTRODUCTION
 **************************************************/

    This program concludes my class Computer Graphics 2008 at 
    the Vrije Universiteit. It was written in C/C++ and it was
    developed and COMPILED using Microsoft Visual C++ 2008. 
    
    ***IMPORTANT***: The project contains C++ code. To compile in 
    Microsoft Visual C++, make sure in the project properties,
    "C/C++", The Advanced menu has as "Copile As" the value
    "Compile as C++ Code". 

/**************************************************
 [2]           THE GAME AND CONTROLS 
 **************************************************/    
   CONTROLS:
      
      Q           - Quit the game
      ESC         - Quit the game
      SPACE       - Pause the game
      UP ARROW    - Make the player cat move forward on his 
                   current pointing direction.
      DOWN ARROW  - Make the player move backwards on his 
                    current pointing direction.
      RIGHT ARROW - Rotate pointing direction to 5 degrees east.
      LEFT ARROW  - Rotate pointing direction to 5 degrees west.
      
   
   THE GAME
   
    In this simple game, the player cat can move in any possible
    direction throughout the ground. Watch out, he can bump on 
    buildings and on other cats. If you place the cat in the way
    of the other cats, they are going to patiently stop until you
    move out of the way to let them walk. Beware of the night: the cats
    might scare you as they will change their eyes', teeth and whiskers'
    color to red, turning them into "Vampires."

/**************************************************
 [3]                   EXTRAS
 **************************************************/

* I am using Scene Graphs (See Node, Geometry, GraphicalObject, PlayerCamera, TexturedCube,
  TexturedRectangle, Transformation).
* I am using display lists to display all the 3D objects and I am using Texture named list
  for the objects that use textures.
* I have added two extra animated cats and each has its own trajectory.
* I have an extra light source.
* I am using fog. 
* I am using collision detection.
* I am using advanced interaction:
   - There is one Player Cat that is controlled by the user.
   - The camera "follows" that player cat AS he moves in any direction.
* I added "Night" and "Day", every 24 seconds ( 1 second = 1 real world hour)), the
  world goes from night to day. When it is night, the eyes, teeth and whiskers of 
  the cats switch to scary red. 
  